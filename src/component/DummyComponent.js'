
// let parent= React.createElement(
//     "h1",
//     {
//         id:"title",
//     },
//     "parent"
// );
// let child=React.createElement(
//     "h2",
//     {
//         id:"title",
//     },
//     "child"
// );
// let grandChild1=React.createElement(
//     "h3",
//     {
//         id:"title"
//     },
//     "grandChild1"
// );
// let container=React.createElement(
//     "div",
//     {
//         id:"container"
//     },
//     [parent, child, grandChild1]
// );
//  let root=ReactDOM.createRoot(document.getElementById("root"));

//  root.render(container);

// let heading = React.createElement("h1", {}, "Hello World from React!");

// let root = ReactDOM.createRoot(document.getElementById("root"));

// root.render(heading);

// let heading= React.createElement("h1",{id:"heading"},"Namaste React");

//  using JSX
/*let jsxheading= <h1 id="heading" >Namaste React in JSX</h1>

let root=ReactDOM.createRoot(document.getElementById("root"));

root.render(jsxheading);*/

/*component in react
1.class based 
2.functional 

functional Component*/

// let HeadingComponent1=()=>(
//     <h1>Namaste React in JSX</h1>

// );

// let HeadingComponent=() => (
//     <h1>Namaste React in Component</h1>
// );

// let root=ReactDOM.createRoot(document.getElementById("root"));

// root.render(<HeadingComponent/>);

/*let elem=<h1>React</h1>

let Title=()=>{
    return(<h1>{elem}Namaste React</h1>)
};

let Title2=()=>{
    return(<>
    <h1>{elem}Namaste React!</h1>
    <h3>Namaste JSX</h3>
    </>)
};


let HeadingComponent=()=>{
    return(<>
        { <Title/> Title} 
         { first way to call function   }
        <Title/>
        <Title2/>
        <Title></Title>
        <h1>Namaste React in Component</h1></>)
        
};*/
